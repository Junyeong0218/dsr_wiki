{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYeong\\\\Desktop\\\\workspace\\\\dsr_wiki\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Combo from './components/combo';\nimport data from './json/data.json';\nimport getEvolutions from './functions/getEvolutions';\nimport ProfileGroup from './components/profileGroup';\nimport Profile from './components/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _selectedDigimon$down, _selectedDigimon$up;\n  const [selectedType, setSelectedType] = useState(\"진화 상태\");\n  const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\n  const [all, setAll] = useState(data);\n  const [filtered, setFiltered] = useState([]);\n  const [selectedDigimon, setSelectedDigimon] = useState({\n    from: \"\"\n  });\n  useEffect(() => {\n    console.log(selectedDigimon);\n  }, [selectedDigimon]);\n  const selectDigimon = digimon => {\n    getEvolutions(digimon);\n    setSelectedDigimon(digimon);\n  };\n  const changeType = type => {\n    setSelectedType(type);\n    setSelectedDigimon({\n      from: \"디지몬 선택\"\n    });\n    const temp = new Array();\n    let prev = \"\";\n    for (const each of all) {\n      if (each.from === prev) continue;\n      if (each.type !== type) continue;\n      prev = each.from;\n      temp.push(each);\n    }\n    setFiltered(temp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"header bar & logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-message\",\n        children: \"\\uC9C4\\uD654 \\uC0C1\\uD0DC\\uC5D0 \\uB9DE\\uB294 \\uB514\\uC9C0\\uBAAC\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(Combo, {\n          list: types,\n          selected: selectedType,\n          select: changeType,\n          selectedType: selectedType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Combo, {\n          list: filtered,\n          selected: selectedDigimon.from,\n          select: current => selectDigimon(current),\n          selectedType: selectedType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"revolution\",\n        children: [(selectedDigimon === null || selectedDigimon === void 0 ? void 0 : (_selectedDigimon$down = selectedDigimon.down) === null || _selectedDigimon$down === void 0 ? void 0 : _selectedDigimon$down.length) > 0 && /*#__PURE__*/_jsxDEV(ProfileGroup, {\n          digimons: selectedDigimon.down,\n          direction: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 60\n        }, this), selectedDigimon.from !== \"\" && /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: selectedDigimon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 54\n        }, this), (selectedDigimon === null || selectedDigimon === void 0 ? void 0 : (_selectedDigimon$up = selectedDigimon.up) === null || _selectedDigimon$up === void 0 ? void 0 : _selectedDigimon$up.length) > 0 && /*#__PURE__*/_jsxDEV(ProfileGroup, {\n          digimons: selectedDigimon.up,\n          direction: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"\\uD478\\uD130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dY0LU9F/e5xLrJETfztbHP5zT1k=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Combo","data","getEvolutions","ProfileGroup","Profile","jsxDEV","_jsxDEV","App","_s","_selectedDigimon$down","_selectedDigimon$up","selectedType","setSelectedType","types","setTypes","all","setAll","filtered","setFiltered","selectedDigimon","setSelectedDigimon","from","console","log","selectDigimon","digimon","changeType","type","temp","Array","prev","each","push","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","list","selected","select","current","down","length","digimons","direction","up","_c","$RefreshReg$"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Combo from './components/combo';\r\nimport data from './json/data.json';\r\nimport getEvolutions from './functions/getEvolutions';\r\nimport ProfileGroup from './components/profileGroup';\r\nimport Profile from './components/profile';\r\n\r\nexport default function App() {\r\n    const [selectedType, setSelectedType] = useState(\"진화 상태\");\r\n    const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\r\n    const [all, setAll] = useState(data);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [selectedDigimon, setSelectedDigimon] = useState({ from: \"\" });\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log(selectedDigimon);\r\n    }, [selectedDigimon]);\r\n\r\n    const selectDigimon = (digimon) => {\r\n        getEvolutions(digimon);\r\n        setSelectedDigimon(digimon);\r\n    }\r\n\r\n    const changeType = (type) => {\r\n        setSelectedType(type);\r\n        setSelectedDigimon({ from: \"디지몬 선택\"});\r\n        const temp = new Array();\r\n        let prev = \"\";\r\n        for(const each of all) {\r\n            if(each.from === prev) continue;\r\n            if(each.type !== type) continue;\r\n\r\n            prev = each.from;\r\n            temp.push(each);\r\n        }\r\n        setFiltered(temp);\r\n    }\r\n\r\n    return (\r\n        <div id=\"container\">\r\n            <div className=\"header\">header bar & logo</div>\r\n            {/* 진화 상태와 그에 맞는 디지몬 선택자 */}\r\n            <div className='main'>\r\n                <h1 className=\"title-message\">진화 상태에 맞는 디지몬을 선택하세요.</h1>\r\n                <div className=\"filters\">\r\n                    <Combo list={types} selected={selectedType} select={changeType} selectedType={selectedType}></Combo>\r\n                    <Combo list={filtered} selected={selectedDigimon.from} select={(current) => selectDigimon(current)}  selectedType={selectedType}></Combo>\r\n                </div>\r\n                <div className='revolution'>\r\n                    { selectedDigimon?.down?.length > 0 && <ProfileGroup digimons={selectedDigimon.down} direction={\"right\"}></ProfileGroup> }\r\n                    { selectedDigimon.from !== \"\" && <Profile digimon={selectedDigimon} ></Profile>}\r\n                    { selectedDigimon?.up?.length > 0 && <ProfileGroup digimons={selectedDigimon.up} direction={\"left\"}></ProfileGroup> }\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">푸터</div>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,mBAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACzD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EACzE,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAACE,IAAI,CAAC;EACpC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,IAAI,EAAE;EAAG,CAAC,CAAC;EAEpEvB,SAAS,CAAC,MAAM;IAEZwB,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;EAChC,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMK,aAAa,GAAIC,OAAO,IAAK;IAC/BvB,aAAa,CAACuB,OAAO,CAAC;IACtBL,kBAAkB,CAACK,OAAO,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzBf,eAAe,CAACe,IAAI,CAAC;IACrBP,kBAAkB,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IACrC,MAAMO,IAAI,GAAG,IAAIC,KAAK,CAAC,CAAC;IACxB,IAAIC,IAAI,GAAG,EAAE;IACb,KAAI,MAAMC,IAAI,IAAIhB,GAAG,EAAE;MACnB,IAAGgB,IAAI,CAACV,IAAI,KAAKS,IAAI,EAAE;MACvB,IAAGC,IAAI,CAACJ,IAAI,KAAKA,IAAI,EAAE;MAEvBG,IAAI,GAAGC,IAAI,CAACV,IAAI;MAChBO,IAAI,CAACI,IAAI,CAACD,IAAI,CAAC;IACnB;IACAb,WAAW,CAACU,IAAI,CAAC;EACrB,CAAC;EAED,oBACItB,OAAA;IAAK2B,EAAE,EAAC,WAAW;IAAAC,QAAA,gBACf5B,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/CjC,OAAA;MAAK6B,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjB5B,OAAA;QAAI6B,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDjC,OAAA;QAAK6B,SAAS,EAAC,SAAS;QAAAD,QAAA,gBACpB5B,OAAA,CAACN,KAAK;UAACwC,IAAI,EAAE3B,KAAM;UAAC4B,QAAQ,EAAE9B,YAAa;UAAC+B,MAAM,EAAEhB,UAAW;UAACf,YAAY,EAAEA;QAAa;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpGjC,OAAA,CAACN,KAAK;UAACwC,IAAI,EAAEvB,QAAS;UAACwB,QAAQ,EAAEtB,eAAe,CAACE,IAAK;UAACqB,MAAM,EAAGC,OAAO,IAAKnB,aAAa,CAACmB,OAAO,CAAE;UAAEhC,YAAY,EAAEA;QAAa;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxI,CAAC,eACNjC,OAAA;QAAK6B,SAAS,EAAC,YAAY;QAAAD,QAAA,GACrB,CAAAf,eAAe,aAAfA,eAAe,wBAAAV,qBAAA,GAAfU,eAAe,CAAEyB,IAAI,cAAAnC,qBAAA,uBAArBA,qBAAA,CAAuBoC,MAAM,IAAG,CAAC,iBAAIvC,OAAA,CAACH,YAAY;UAAC2C,QAAQ,EAAE3B,eAAe,CAACyB,IAAK;UAACG,SAAS,EAAE;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,EACtHpB,eAAe,CAACE,IAAI,KAAK,EAAE,iBAAIf,OAAA,CAACF,OAAO;UAACqB,OAAO,EAAEN;QAAgB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,EAC7E,CAAApB,eAAe,aAAfA,eAAe,wBAAAT,mBAAA,GAAfS,eAAe,CAAE6B,EAAE,cAAAtC,mBAAA,uBAAnBA,mBAAA,CAAqBmC,MAAM,IAAG,CAAC,iBAAIvC,OAAA,CAACH,YAAY;UAAC2C,QAAQ,EAAE3B,eAAe,CAAC6B,EAAG;UAACD,SAAS,EAAE;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNjC,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAAC/B,EAAA,CAnDuBD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}