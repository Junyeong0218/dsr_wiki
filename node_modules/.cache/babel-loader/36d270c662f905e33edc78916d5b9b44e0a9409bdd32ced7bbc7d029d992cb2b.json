{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYeong\\\\Desktop\\\\workspace\\\\dsr_wiki\\\\src\\\\components\\\\profileGroup.js\";\nimport React from \"react\";\nimport Profile from \"./profile\";\nimport ProfileLine from \"./profileLine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileGroup({\n  digimons,\n  direction\n}) {\n  const flexRowAndAlignEnd = {\n    flexDirection: \"row\",\n    alignSelf: \"flex-end\"\n  };\n  const flexRow = {\n    flexDirection: \"row\"\n  };\n  const flexColumn = {\n    flexDirection: \"column\"\n  };\n\n  // digimons의 요소가 1개인 경우\n  if ((digimons === null || digimons === void 0 ? void 0 : digimons.length) === 1) {\n    // digimons.down이 존재하는 경우 -> profileGroup\n    if (digimons[0].down !== undefined && digimons[0].down !== null) {\n      // console.log(\"digimons1\", digimons)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        style: flexRow,\n        children: [/*#__PURE__*/_jsxDEV(ProfileGroup, {\n          digimons: digimons[0].down,\n          direction: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ProfileLine, {\n          digimon: digimons[0],\n          direction: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimons[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this);\n    } else {\n      // digimons.down이 존재하지 않는 경우 -> profile\n      // console.log(\"digimons2\", digimons)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        style: flexRow,\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimons[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    }\n    // digimons의 요소가 복수인 경우\n  } else if ((digimons === null || digimons === void 0 ? void 0 : digimons.length) > 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-group\",\n      style: flexColumn,\n      children: digimons.map(digimon => {\n        if (digimon.down === undefined || digimon.down === null) {\n          if (digimon.type === \"유년기1\" || digimon.type === \"유년기2\") return /*#__PURE__*/_jsxDEV(Profile, {\n            digimon: digimon,\n            align: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 36\n          }, this);else console.log(\"digimons3 - only profile\", direction, digimons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-group\",\n            children: [/*#__PURE__*/_jsxDEV(ProfileLine, {\n              digimon: digimon,\n              direction: direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Profile, {\n              digimon: digimon,\n              align: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this);\n        } else if (direction === \"right\") {\n          // console.log(\"digimons4 - group line profile\", digimons)\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-group\",\n            style: flexRowAndAlignEnd,\n            children: [/*#__PURE__*/_jsxDEV(ProfileGroup, {\n              digimons: digimon.down,\n              direction: direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ProfileLine, {\n              digimon: digimon,\n              direction: direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Profile, {\n              digimon: digimon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this);\n        } else {\n          // console.log(\"digimons5 - only group\", digimons)\n          return /*#__PURE__*/_jsxDEV(ProfileGroup, {\n            digimons: digimon.up,\n            direction: direction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = ProfileGroup;\nvar _c;\n$RefreshReg$(_c, \"ProfileGroup\");","map":{"version":3,"names":["React","Profile","ProfileLine","jsxDEV","_jsxDEV","ProfileGroup","digimons","direction","flexRowAndAlignEnd","flexDirection","alignSelf","flexRow","flexColumn","length","down","undefined","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","digimon","map","type","align","console","log","up","_c","$RefreshReg$"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/components/profileGroup.js"],"sourcesContent":["import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport ProfileLine from \"./profileLine\";\r\n\r\nexport default function ProfileGroup({ digimons, direction }) {\r\n    const flexRowAndAlignEnd = {flexDirection: \"row\", alignSelf: \"flex-end\"};\r\n    const flexRow = {flexDirection: \"row\"};\r\n    const flexColumn = {flexDirection: \"column\"};\r\n\r\n    // digimons의 요소가 1개인 경우\r\n    if(digimons?.length === 1) {\r\n        // digimons.down이 존재하는 경우 -> profileGroup\r\n        if(digimons[0].down !== undefined && digimons[0].down !== null) {\r\n            // console.log(\"digimons1\", digimons)\r\n            return (<div className=\"profile-group\" style={flexRow}>\r\n                        <ProfileGroup digimons={digimons[0].down} direction={direction}></ProfileGroup>\r\n                        <ProfileLine digimon={digimons[0]} direction={direction}></ProfileLine>\r\n                        <Profile digimon={digimons[0]} ></Profile>\r\n                    </div>);\r\n        } else {\r\n            // digimons.down이 존재하지 않는 경우 -> profile\r\n            // console.log(\"digimons2\", digimons)\r\n            return (<div className=\"profile-group\" style={flexRow}>\r\n                        <Profile digimon={digimons[0]} ></Profile>\r\n                    </div>);\r\n        }\r\n    // digimons의 요소가 복수인 경우\r\n    } else if(digimons?.length > 1) {\r\n        return (\r\n            <div className=\"profile-group\" style={flexColumn} >\r\n                { digimons.map(digimon => {\r\n                    if(digimon.down === undefined || digimon.down === null) {\r\n                        if(digimon.type === \"유년기1\" || digimon.type === \"유년기2\")\r\n                            return <Profile digimon={digimon} align={\"end\"}></Profile>;\r\n                        else\r\n                            console.log(\"digimons3 - only profile\", direction, digimons)\r\n                            return (<div className=\"profile-group\">\r\n                                <ProfileLine digimon={digimon} direction={direction}></ProfileLine>\r\n                                <Profile digimon={digimon} align={\"end\"}></Profile>\r\n                            </div>);\r\n                    } else if(direction === \"right\") {\r\n                        // console.log(\"digimons4 - group line profile\", digimons)\r\n                        return (<div className=\"profile-group\" style={flexRowAndAlignEnd}>\r\n                                    <ProfileGroup digimons={digimon.down} direction={direction}></ProfileGroup>\r\n                                    <ProfileLine digimon={digimon} direction={direction}></ProfileLine>\r\n                                    <Profile digimon={digimon}></Profile>\r\n                                </div>);\r\n                    } else {\r\n                        // console.log(\"digimons5 - only group\", digimons)\r\n                        return (<ProfileGroup digimons={digimon.up} direction={direction}></ProfileGroup>);\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}