{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYeong\\\\Desktop\\\\workspace\\\\dsr_wiki\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Combo from './components/combo';\nimport data from './json/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedType, setSelectedType] = useState(\"진화 상태\");\n  const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\n  const [selectedDigimon, setSelectedDigimon] = useState({\n    from: \"\"\n  });\n  const [all, setAll] = useState(data);\n  const [filtered, setFiltered] = useState([]);\n  const changeType = type => {\n    setSelectedType(type);\n    setSelectedDigimon({\n      from: \"디지몬 선택\"\n    });\n    const temp = new Array();\n    let prev = \"\";\n    for (const each of all) {\n      if (each.from === prev) continue;\n      if (each.type !== type) continue;\n      prev = each.from;\n      temp.push(each);\n    }\n    setFiltered(temp);\n  };\n  return (\n    /*#__PURE__*/\n    // 진화 상태와 그에 맞는 디지몬 선택자\n    _jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(Combo, {\n        list: types,\n        selected: selectedType,\n        select: changeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Combo, {\n        list: filtered,\n        selected: selectedDigimon.from,\n        select: setSelectedDigimon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"QEStaZKXvh8LKAE3cXqFK4GkV9Q=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Combo","data","jsxDEV","_jsxDEV","App","_s","selectedType","setSelectedType","types","setTypes","selectedDigimon","setSelectedDigimon","from","all","setAll","filtered","setFiltered","changeType","type","temp","Array","prev","each","push","className","children","list","selected","select","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Combo from './components/combo';\r\nimport data from './json/data.json';\r\n\r\nexport default function App() {\r\n    const [selectedType, setSelectedType] = useState(\"진화 상태\");\r\n    const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\r\n    const [selectedDigimon, setSelectedDigimon] = useState({ from: \"\" });\r\n    const [all, setAll] = useState(data);\r\n    const [filtered, setFiltered] = useState([]);\r\n\r\n    const changeType = (type) => {\r\n        setSelectedType(type);\r\n        setSelectedDigimon({ from: \"디지몬 선택\"});\r\n        const temp = new Array();\r\n        let prev = \"\";\r\n        for(const each of all) {\r\n            if(each.from === prev) continue;\r\n            if(each.type !== type) continue;\r\n\r\n            prev = each.from;\r\n            temp.push(each);\r\n        }\r\n        setFiltered(temp);\r\n    }\r\n\r\n    return (\r\n        // 진화 상태와 그에 맞는 디지몬 선택자\r\n        <div className=\"filters\">\r\n            <Combo list={types} selected={selectedType} select={changeType}></Combo>\r\n            <Combo list={filtered} selected={selectedDigimon.from} select={setSelectedDigimon}></Combo>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EACzE,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAACE,IAAI,CAAC;EACpC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMkB,UAAU,GAAIC,IAAI,IAAK;IACzBX,eAAe,CAACW,IAAI,CAAC;IACrBP,kBAAkB,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IACrC,MAAMO,IAAI,GAAG,IAAIC,KAAK,CAAC,CAAC;IACxB,IAAIC,IAAI,GAAG,EAAE;IACb,KAAI,MAAMC,IAAI,IAAIT,GAAG,EAAE;MACnB,IAAGS,IAAI,CAACV,IAAI,KAAKS,IAAI,EAAE;MACvB,IAAGC,IAAI,CAACJ,IAAI,KAAKA,IAAI,EAAE;MAEvBG,IAAI,GAAGC,IAAI,CAACV,IAAI;MAChBO,IAAI,CAACI,IAAI,CAACD,IAAI,CAAC;IACnB;IACAN,WAAW,CAACG,IAAI,CAAC;EACrB,CAAC;EAED;IAAA;IACI;IACAhB,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBtB,OAAA,CAACH,KAAK;QAAC0B,IAAI,EAAElB,KAAM;QAACmB,QAAQ,EAAErB,YAAa;QAACsB,MAAM,EAAEX;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxE7B,OAAA,CAACH,KAAK;QAAC0B,IAAI,EAAEX,QAAS;QAACY,QAAQ,EAAEjB,eAAe,CAACE,IAAK;QAACgB,MAAM,EAAEjB;MAAmB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F;EAAC;AAEd;AAAC3B,EAAA,CA7BuBD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}