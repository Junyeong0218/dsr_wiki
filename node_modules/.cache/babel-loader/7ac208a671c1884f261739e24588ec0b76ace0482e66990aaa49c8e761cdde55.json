{"ast":null,"code":"import data from'../json/data.json';const getTypeProgression=type=>{if(type===\"유년기1\")return 1;if(type===\"유년기2\")return 2;if(type===\"성장기\")return 3;if(type===\"성숙기\")return 4;if(type===\"완전체\")return 5;return 0;};const getTypeNameByProgression=progression=>{if(progression===1)return\"유년기1\";if(progression===2)return\"유년기2\";if(progression===3)return\"성장기\";if(progression===4)return\"성숙기\";if(progression===5)return\"완전체\";return 0;};const temp=[];const clearTempArray=()=>{for(let i=0;i<temp.length;i++){temp.pop();}};const getDownEvolutions=(all,standard,selected)=>{const evolution=new Array();for(let i=standard;i>1;i--){const typeName=getTypeNameByProgression(i-1);all.filter(each=>each.type===typeName&&each.to===selected.from).forEach(each=>{let sub=null;if(temp.findIndex(t=>(t===null||t===void 0?void 0:t.from)===each.from)===-1){sub=getDownEvolutions(all,standard-1,each);if(sub!==null&&sub!==undefined)temp.push(...sub);}each[\"down\"]=sub;evolution.push(each);});return evolution.length>0?evolution:null;}};const getUpEvolutions=(all,standard,selected)=>{const evolution=new Array();for(let i=standard;i<6;i++){const typeName=getTypeNameByProgression(i);all.filter(each=>each.type===typeName&&each.from===selected.from).forEach(each=>{each.from=each.to;let sup=null;if(temp.findIndex(t=>(t===null||t===void 0?void 0:t.from)===each.from)===-1){sup=getUpEvolutions(all,standard+1,each);if(sup!==null&&sup!==undefined)temp.push(...sup);}each[\"up\"]=sup;evolution.push(each);});return evolution.length>0?evolution:null;}};const deepCopyAll=()=>{const all=new Array();for(const each of data){all.push(Object.assign({},each));}return all;};const getEvolutions=selected=>{const standard=getTypeProgression(selected.type);const all=deepCopyAll(data);selected[\"down\"]=[];selected[\"down\"]=getDownEvolutions(all,standard,selected);clearTempArray();selected[\"up\"]=[];selected[\"up\"]=getUpEvolutions(all,standard,selected);clearTempArray();};export default getEvolutions;","map":{"version":3,"names":["data","getTypeProgression","type","getTypeNameByProgression","progression","temp","clearTempArray","i","length","pop","getDownEvolutions","all","standard","selected","evolution","Array","typeName","filter","each","to","from","forEach","sub","findIndex","t","undefined","push","getUpEvolutions","sup","deepCopyAll","Object","assign","getEvolutions"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/functions/getEvolutions.js"],"sourcesContent":["import data from '../json/data.json';\r\n\r\nconst getTypeProgression = (type) => {\r\n  if (type === \"유년기1\") return 1;\r\n  if (type === \"유년기2\") return 2;\r\n  if (type === \"성장기\") return 3;\r\n  if (type === \"성숙기\") return 4;\r\n  if (type === \"완전체\") return 5;\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTypeNameByProgression = (progression) => {\r\n  if (progression === 1) return \"유년기1\";\r\n  if (progression === 2) return \"유년기2\";\r\n  if (progression === 3) return \"성장기\";\r\n  if (progression === 4) return \"성숙기\";\r\n  if (progression === 5) return \"완전체\";\r\n\r\n  return 0;\r\n};\r\n\r\nconst temp = [];\r\nconst clearTempArray = () => {\r\n  for (let i = 0; i < temp.length; i++) {\r\n    temp.pop();\r\n  }\r\n};\r\n\r\nconst getDownEvolutions = (all, standard, selected) => {\r\n  const evolution = new Array();\r\n\r\n  for (let i = standard; i > 1; i--) {\r\n    const typeName = getTypeNameByProgression(i - 1);\r\n\r\n    all\r\n      .filter((each) => each.type === typeName && each.to === selected.from)\r\n      .forEach((each) => {\r\n        let sub = null;\r\n        if (temp.findIndex((t) => t?.from === each.from) === -1) {\r\n          sub = getDownEvolutions(all, standard - 1, each);\r\n          if (sub !== null && sub !== undefined) temp.push(...sub);\r\n        }\r\n\r\n        each[\"down\"] = sub;\r\n        evolution.push(each);\r\n      });\r\n\r\n    return evolution.length > 0 ? evolution : null;\r\n  }\r\n};\r\n\r\nconst getUpEvolutions = (all, standard, selected) => {\r\n  const evolution = new Array();\r\n\r\n  for (let i = standard; i < 6; i++) {\r\n    const typeName = getTypeNameByProgression(i);\r\n\r\n    all\r\n      .filter((each) => each.type === typeName && each.from === selected.from)\r\n      .forEach((each) => {\r\n        each.from = each.to\r\n        let sup = null;\r\n        if (temp.findIndex((t) => t?.from === each.from) === -1) {\r\n          sup = getUpEvolutions(all, standard + 1, each);\r\n          if (sup !== null && sup !== undefined) temp.push(...sup);\r\n        }\r\n\r\n        each[\"up\"] = sup;\r\n        evolution.push(each);\r\n      });\r\n\r\n    return evolution.length > 0 ? evolution : null;\r\n  }\r\n};\r\n\r\nconst deepCopyAll = () => {\r\n    const all = new Array();\r\n    for(const each of data) {\r\n        all.push(Object.assign({}, each));\r\n    }\r\n\r\n    return all;\r\n}\r\n\r\nconst getEvolutions = (selected) => {\r\n  const standard = getTypeProgression(selected.type);\r\n\r\n  const all = deepCopyAll(data);\r\n\r\n  selected[\"down\"] = [];\r\n  selected[\"down\"] = getDownEvolutions(all, standard, selected);\r\n  clearTempArray();\r\n\r\n  selected[\"up\"] = [];\r\n  selected[\"up\"] = getUpEvolutions(all, standard, selected);\r\n  clearTempArray();\r\n};\r\n\r\nexport default getEvolutions;\r\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,mBAAmB,CAEpC,KAAM,CAAAC,kBAAkB,CAAIC,IAAI,EAAK,CACnC,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,EAAC,CAC7B,GAAIA,IAAI,GAAK,MAAM,CAAE,MAAO,EAAC,CAC7B,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,EAAC,CAC5B,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,EAAC,CAC5B,GAAIA,IAAI,GAAK,KAAK,CAAE,MAAO,EAAC,CAE5B,MAAO,EAAC,CACV,CAAC,CAED,KAAM,CAAAC,wBAAwB,CAAIC,WAAW,EAAK,CAChD,GAAIA,WAAW,GAAK,CAAC,CAAE,MAAO,MAAM,CACpC,GAAIA,WAAW,GAAK,CAAC,CAAE,MAAO,MAAM,CACpC,GAAIA,WAAW,GAAK,CAAC,CAAE,MAAO,KAAK,CACnC,GAAIA,WAAW,GAAK,CAAC,CAAE,MAAO,KAAK,CACnC,GAAIA,WAAW,GAAK,CAAC,CAAE,MAAO,KAAK,CAEnC,MAAO,EAAC,CACV,CAAC,CAED,KAAM,CAAAC,IAAI,CAAG,EAAE,CACf,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,IAAI,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CACpCF,IAAI,CAACI,GAAG,CAAC,CAAC,CACZ,CACF,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAGA,CAACC,GAAG,CAAEC,QAAQ,CAAEC,QAAQ,GAAK,CACrD,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CAE7B,IAAK,GAAI,CAAAR,CAAC,CAAGK,QAAQ,CAAEL,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACjC,KAAM,CAAAS,QAAQ,CAAGb,wBAAwB,CAACI,CAAC,CAAG,CAAC,CAAC,CAEhDI,GAAG,CACAM,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAAChB,IAAI,GAAKc,QAAQ,EAAIE,IAAI,CAACC,EAAE,GAAKN,QAAQ,CAACO,IAAI,CAAC,CACrEC,OAAO,CAAEH,IAAI,EAAK,CACjB,GAAI,CAAAI,GAAG,CAAG,IAAI,CACd,GAAIjB,IAAI,CAACkB,SAAS,CAAEC,CAAC,EAAK,CAAAA,CAAC,SAADA,CAAC,iBAADA,CAAC,CAAEJ,IAAI,IAAKF,IAAI,CAACE,IAAI,CAAC,GAAK,CAAC,CAAC,CAAE,CACvDE,GAAG,CAAGZ,iBAAiB,CAACC,GAAG,CAAEC,QAAQ,CAAG,CAAC,CAAEM,IAAI,CAAC,CAChD,GAAII,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAKG,SAAS,CAAEpB,IAAI,CAACqB,IAAI,CAAC,GAAGJ,GAAG,CAAC,CAC1D,CAEAJ,IAAI,CAAC,MAAM,CAAC,CAAGI,GAAG,CAClBR,SAAS,CAACY,IAAI,CAACR,IAAI,CAAC,CACtB,CAAC,CAAC,CAEJ,MAAO,CAAAJ,SAAS,CAACN,MAAM,CAAG,CAAC,CAAGM,SAAS,CAAG,IAAI,CAChD,CACF,CAAC,CAED,KAAM,CAAAa,eAAe,CAAGA,CAAChB,GAAG,CAAEC,QAAQ,CAAEC,QAAQ,GAAK,CACnD,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CAE7B,IAAK,GAAI,CAAAR,CAAC,CAAGK,QAAQ,CAAEL,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACjC,KAAM,CAAAS,QAAQ,CAAGb,wBAAwB,CAACI,CAAC,CAAC,CAE5CI,GAAG,CACAM,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAAChB,IAAI,GAAKc,QAAQ,EAAIE,IAAI,CAACE,IAAI,GAAKP,QAAQ,CAACO,IAAI,CAAC,CACvEC,OAAO,CAAEH,IAAI,EAAK,CACjBA,IAAI,CAACE,IAAI,CAAGF,IAAI,CAACC,EAAE,CACnB,GAAI,CAAAS,GAAG,CAAG,IAAI,CACd,GAAIvB,IAAI,CAACkB,SAAS,CAAEC,CAAC,EAAK,CAAAA,CAAC,SAADA,CAAC,iBAADA,CAAC,CAAEJ,IAAI,IAAKF,IAAI,CAACE,IAAI,CAAC,GAAK,CAAC,CAAC,CAAE,CACvDQ,GAAG,CAAGD,eAAe,CAAChB,GAAG,CAAEC,QAAQ,CAAG,CAAC,CAAEM,IAAI,CAAC,CAC9C,GAAIU,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAKH,SAAS,CAAEpB,IAAI,CAACqB,IAAI,CAAC,GAAGE,GAAG,CAAC,CAC1D,CAEAV,IAAI,CAAC,IAAI,CAAC,CAAGU,GAAG,CAChBd,SAAS,CAACY,IAAI,CAACR,IAAI,CAAC,CACtB,CAAC,CAAC,CAEJ,MAAO,CAAAJ,SAAS,CAACN,MAAM,CAAG,CAAC,CAAGM,SAAS,CAAG,IAAI,CAChD,CACF,CAAC,CAED,KAAM,CAAAe,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAlB,GAAG,CAAG,GAAI,CAAAI,KAAK,CAAC,CAAC,CACvB,IAAI,KAAM,CAAAG,IAAI,GAAI,CAAAlB,IAAI,CAAE,CACpBW,GAAG,CAACe,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEb,IAAI,CAAC,CAAC,CACrC,CAEA,MAAO,CAAAP,GAAG,CACd,CAAC,CAED,KAAM,CAAAqB,aAAa,CAAInB,QAAQ,EAAK,CAClC,KAAM,CAAAD,QAAQ,CAAGX,kBAAkB,CAACY,QAAQ,CAACX,IAAI,CAAC,CAElD,KAAM,CAAAS,GAAG,CAAGkB,WAAW,CAAC7B,IAAI,CAAC,CAE7Ba,QAAQ,CAAC,MAAM,CAAC,CAAG,EAAE,CACrBA,QAAQ,CAAC,MAAM,CAAC,CAAGH,iBAAiB,CAACC,GAAG,CAAEC,QAAQ,CAAEC,QAAQ,CAAC,CAC7DP,cAAc,CAAC,CAAC,CAEhBO,QAAQ,CAAC,IAAI,CAAC,CAAG,EAAE,CACnBA,QAAQ,CAAC,IAAI,CAAC,CAAGc,eAAe,CAAChB,GAAG,CAAEC,QAAQ,CAAEC,QAAQ,CAAC,CACzDP,cAAc,CAAC,CAAC,CAClB,CAAC,CAED,cAAe,CAAA0B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}