{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYeong\\\\Desktop\\\\workspace\\\\dsr_wiki\\\\src\\\\components\\\\profileGroup.js\";\nimport React from \"react\";\nimport Profile from \"./profile\";\nimport ProfileLine from \"./profileLine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileGroup({\n  digimons,\n  direction\n}) {\n  const flexRow = {\n    flexDirection: \"row\"\n  };\n  const flexColumn = {\n    flexDirection: \"column\"\n  };\n\n  // digimons의 요소가 1개인 경우\n  if ((digimons === null || digimons === void 0 ? void 0 : digimons.length) === 1) {\n    // digimons.down이 존재하는 경우 -> profileGroup\n    if (digimons[0].down !== undefined && digimons[0].down !== null) {\n      // console.log(\"digimons1\", digimons)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        style: flexRow,\n        children: [/*#__PURE__*/_jsxDEV(ProfileGroup, {\n          digimons: digimons[0].down,\n          direction: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ProfileLine, {\n          digimon: digimons[0],\n          direction: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimons[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this);\n    } else {\n      // digimons.down이 존재하지 않는 경우 -> profile\n      // console.log(\"digimons2\", digimons)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        style: flexRow,\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimons[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }\n    // digimons의 요소가 복수인 경우\n  } else if ((digimons === null || digimons === void 0 ? void 0 : digimons.length) > 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-group\",\n      style: flexColumn,\n      children: digimons.map(digimon => {\n        if (digimon.down === undefined || digimon.down === null) {\n          if (digimon.type === \"유년기1\" || digimon.type === \"유년기2\") return /*#__PURE__*/_jsxDEV(Profile, {\n            digimon: digimon,\n            align: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this);else console.log(\"digimons3 - only profile\", digimons);\n          // skipped\n          return /*#__PURE__*/_jsxDEV(Profile, {\n            digimon: digimon,\n            align: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this);\n        } else if (direction === \"right\") {\n          // console.log(\"digimons4 - group line profile\", digimons)\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-group\",\n            children: [/*#__PURE__*/_jsxDEV(ProfileGroup, {\n              digimons: digimon.down,\n              direction: direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ProfileLine, {\n              digimon: digimon,\n              direction: direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Profile, {\n              digimon: digimon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this);\n        } else {\n          // console.log(\"digimons5 - only group\", digimons)\n          return /*#__PURE__*/_jsxDEV(ProfileGroup, {\n            digimons: digimon.up,\n            direction: direction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n\n    // digimons의 각 요소 digimon에 digimon.down이 존재하는 경우 -> profileGroup\n    if (digimons.down !== undefined) {\n      console.log(\"digimons3\", digimons);\n      return digimons.map(digimon => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileGroup, {\n          digimons: digimon.down,\n          direction: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this));\n    } else {\n      // digimons.down이 존재하지 않는 경우 -> profile\n      console.log(\"digimons4\", digimons);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        children: digimons.map(digimon => /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this);\n    }\n    return digimons.map(digimon => /*#__PURE__*/_jsxDEV(Profile, {\n      digimon: digimon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 40\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-group\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n\n  // let tags;\n\n  // if(digimons.length > 0) return (<div className=\"profile-group\"></div>);\n  // else {\n  //     tags += (<div className=\"profile-group\">\n  //         { digimons.length > 0 && digimons.map(digimon => (\n  //             <ProfileWithLine digimon={digimon} direction={direction} length={digimons.length > 1 ? \"full\" : \"half\"}></ProfileWithLine>\n  //         ))}\n  //     </div>)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-group\",\n    children: [digimons.length === 1 && /*#__PURE__*/_jsxDEV(Profile, {\n      digimon: digimons[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 40\n    }, this), digimons.length > 1 && digimons.map(digimon => /*#__PURE__*/_jsxDEV(Profile, {\n      digimon: digimon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 62\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_c = ProfileGroup;\nvar _c;\n$RefreshReg$(_c, \"ProfileGroup\");","map":{"version":3,"names":["React","Profile","ProfileLine","jsxDEV","_jsxDEV","ProfileGroup","digimons","direction","flexRow","flexDirection","flexColumn","length","down","undefined","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","digimon","map","type","align","console","log","up","_c","$RefreshReg$"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/components/profileGroup.js"],"sourcesContent":["import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport ProfileLine from \"./profileLine\";\r\n\r\nexport default function ProfileGroup({ digimons, direction }) {\r\n    const flexRow = {flexDirection: \"row\"};\r\n    const flexColumn = {flexDirection: \"column\"};\r\n\r\n    // digimons의 요소가 1개인 경우\r\n    if(digimons?.length === 1) {\r\n        // digimons.down이 존재하는 경우 -> profileGroup\r\n        if(digimons[0].down !== undefined && digimons[0].down !== null) {\r\n            // console.log(\"digimons1\", digimons)\r\n            return (<div className=\"profile-group\" style={flexRow}>\r\n                        <ProfileGroup digimons={digimons[0].down} direction={direction}></ProfileGroup>\r\n                        <ProfileLine digimon={digimons[0]} direction={direction}></ProfileLine>\r\n                        <Profile digimon={digimons[0]} ></Profile>\r\n                    </div>);\r\n        } else {\r\n            // digimons.down이 존재하지 않는 경우 -> profile\r\n            // console.log(\"digimons2\", digimons)\r\n            return (<div className=\"profile-group\" style={flexRow}>\r\n                        <Profile digimon={digimons[0]} ></Profile>\r\n                    </div>);\r\n        }\r\n    // digimons의 요소가 복수인 경우\r\n    } else if(digimons?.length > 1) {\r\n        return (\r\n            <div className=\"profile-group\" style={flexColumn} >\r\n                { digimons.map(digimon => {\r\n                    if(digimon.down === undefined || digimon.down === null) {\r\n                        if(digimon.type === \"유년기1\" || digimon.type === \"유년기2\")\r\n                            return <Profile digimon={digimon} align={\"end\"}></Profile>;\r\n                        else\r\n                            console.log(\"digimons3 - only profile\", digimons)\r\n                            // skipped\r\n                            return (\r\n                                <Profile digimon={digimon} align={\"end\"}></Profile>\r\n                            );\r\n                    } else if(direction === \"right\") {\r\n                        // console.log(\"digimons4 - group line profile\", digimons)\r\n                        return (<div className=\"profile-group\">\r\n                                    <ProfileGroup digimons={digimon.down} direction={direction}></ProfileGroup>\r\n                                    <ProfileLine digimon={digimon} direction={direction}></ProfileLine>\r\n                                    <Profile digimon={digimon}></Profile>\r\n                                </div>);\r\n                    } else {\r\n                        // console.log(\"digimons5 - only group\", digimons)\r\n                        return (<ProfileGroup digimons={digimon.up} direction={direction}></ProfileGroup>);\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        // digimons의 각 요소 digimon에 digimon.down이 존재하는 경우 -> profileGroup\r\n        if(digimons.down !== undefined) {\r\n            console.log(\"digimons3\", digimons)\r\n            return digimons.map(digimon => (\r\n                <div className=\"profile-group\">\r\n                    <ProfileGroup digimons={digimon.down} direction={direction}></ProfileGroup>\r\n                    <Profile digimon={digimon}></Profile>\r\n                </div>\r\n            ));\r\n        } else {\r\n            // digimons.down이 존재하지 않는 경우 -> profile\r\n            console.log(\"digimons4\", digimons)\r\n            return (<div className=\"profile-group\">\r\n                        { digimons.map(digimon => <Profile digimon={digimon}></Profile>) }\r\n                    </div>);\r\n        }\r\n\r\n        return digimons.map(digimon => <Profile digimon={digimon}></Profile>);\r\n    }\r\n\r\n    return (<div className=\"profile-group\"></div>);\r\n\r\n    // let tags;\r\n    \r\n    // if(digimons.length > 0) return (<div className=\"profile-group\"></div>);\r\n    // else {\r\n    //     tags += (<div className=\"profile-group\">\r\n    //         { digimons.length > 0 && digimons.map(digimon => (\r\n    //             <ProfileWithLine digimon={digimon} direction={direction} length={digimons.length > 1 ? \"full\" : \"half\"}></ProfileWithLine>\r\n    //         ))}\r\n    //     </div>)\r\n    // }\r\n    return (\r\n        <div className=\"profile-group\">\r\n            { digimons.length === 1 && <Profile digimon={digimons[0]} ></Profile>}\r\n            { digimons.length > 1 && digimons.map(digimon => <Profile digimon={digimon}></Profile> )}\r\n            {/* { digimons.length > 1 && \r\n                digimons.filter(digimon => digimon.down !== undefined && digimon.down?.length > 0)\r\n                        .map(digimon => <ProfileGroup digimons={digimon.down} direction={direction}></ProfileGroup>)} */}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}