{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYeong\\\\Desktop\\\\workspace\\\\dsr_wiki\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Combo from './components/combo';\nimport data from './json/data.json';\nimport getEvolutions from './functions/getEvolutions';\nimport ProfileGroup from './components/profileGroup';\nimport Profile from './components/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedType, setSelectedType] = useState(\"진화 상태\");\n  const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\n  const [all, setAll] = useState(data);\n  const [filtered, setFiltered] = useState([]);\n  const [selectedDigimon, setSelectedDigimon] = useState({\n    from: \"\"\n  });\n\n  // useEffect(() => {\n\n  //     console.log(selectedDigimon);\n  // }, [selectedDigimon]);\n\n  const selectDigimon = digimon => {\n    getEvolutions(digimon);\n    setSelectedDigimon(digimon);\n    // verticalLeftLength();\n    adjust();\n  };\n  const changeType = type => {\n    setSelectedType(type);\n    setSelectedDigimon({\n      from: \"디지몬 선택\"\n    });\n    const temp = new Array();\n    let prev = \"\";\n    for (const each of all) {\n      if (each.from === prev) continue;\n      if (each.type !== type) continue;\n      prev = each.from;\n      temp.push(each);\n    }\n    setFiltered(temp);\n  };\n\n  // const verticalHeightLeft = { height: `calc(var(--profile-height) * ${selectedDigimon?.down?.length - 1})` };\n  // const verticalHeightLeft = useRef({});\n  // const verticalLeftLength = () => {\n  //     const map = selectedDigimon?.down?.flatMap(each => each?.down);\n  //     let topPadding = 0;\n  //     let bottomPadding = 0;\n  //     let length = 0;\n  //     for(let i = 0; i < map.down?.length; i++) {\n  //         const each = map.down[i];\n  //         console.log(\"each\", each);\n  //         const row = each?.down?.length * 89 ?? 0;\n  //         length += row;\n  //         if(i === 0) topPadding = Math.floor(length / 2);\n  //         if(i === map.down?.length - 1) bottomPadding = Math.floor(row / 2);\n  //     }\n  //     // console.log(selectedDigimon?.down?.flatMap(each => each?.down));\n  //     verticalHeightLeft.current = {\n  //         top: `${topPadding}px`,\n  //         height: `${length}px`\n  //     };\n  //     // setLeft({\n  //     //     top: `${topPadding}px`,\n  //     //     height: `${length}px`\n  //     // })\n  // }\n  const adjust = () => {\n    const canvas = document.getElementById(\"revolution\");\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = 5;\n    ctx.lineRadius = 5;\n    ctx.drawImage(document.querySelector(\"#imageName\"));\n    // ctx.beginPath();\n    // ctx.moveTo(50, 140);\n    // ctx.lineTo(150, 60);\n    // ctx.lineTo(250, 140);\n    // ctx.closePath();\n    // ctx.stroke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"header bar & logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-message\",\n        children: \"\\uC9C4\\uD654 \\uC0C1\\uD0DC\\uC5D0 \\uB9DE\\uB294 \\uB514\\uC9C0\\uBAAC\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(Combo, {\n          list: types,\n          selected: selectedType,\n          select: changeType,\n          selectedType: selectedType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Combo, {\n          list: filtered,\n          selected: selectedDigimon.from,\n          select: current => selectDigimon(current),\n          selectedType: selectedType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"revolution\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"revolution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disable-images\",\n          style: {\n            display: none\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"imageName\",\n            src: `/images/${imageName}.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"\\uD478\\uD130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"bGS3gXYxeSHz6p6lEYLaDk4jLSg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Combo","data","getEvolutions","ProfileGroup","Profile","jsxDEV","_jsxDEV","App","_s","selectedType","setSelectedType","types","setTypes","all","setAll","filtered","setFiltered","selectedDigimon","setSelectedDigimon","from","selectDigimon","digimon","adjust","changeType","type","temp","Array","prev","each","push","canvas","document","getElementById","ctx","getContext","lineWidth","lineRadius","drawImage","querySelector","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","list","selected","select","current","style","display","none","src","imageName","_c","$RefreshReg$"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Combo from './components/combo';\r\nimport data from './json/data.json';\r\nimport getEvolutions from './functions/getEvolutions';\r\nimport ProfileGroup from './components/profileGroup';\r\nimport Profile from './components/profile';\r\n\r\nexport default function App() {\r\n    const [selectedType, setSelectedType] = useState(\"진화 상태\");\r\n    const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\r\n    const [all, setAll] = useState(data);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [selectedDigimon, setSelectedDigimon] = useState({ from: \"\" });\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     console.log(selectedDigimon);\r\n    // }, [selectedDigimon]);\r\n\r\n    const selectDigimon = (digimon) => {\r\n        getEvolutions(digimon);\r\n        setSelectedDigimon(digimon);\r\n        // verticalLeftLength();\r\n        adjust();\r\n    }\r\n\r\n    const changeType = (type) => {\r\n        setSelectedType(type);\r\n        setSelectedDigimon({ from: \"디지몬 선택\"});\r\n        const temp = new Array();\r\n        let prev = \"\";\r\n        for(const each of all) {\r\n            if(each.from === prev) continue;\r\n            if(each.type !== type) continue;\r\n\r\n            prev = each.from;\r\n            temp.push(each);\r\n        }\r\n        setFiltered(temp);\r\n    }\r\n\r\n    // const verticalHeightLeft = { height: `calc(var(--profile-height) * ${selectedDigimon?.down?.length - 1})` };\r\n    // const verticalHeightLeft = useRef({});\r\n    // const verticalLeftLength = () => {\r\n    //     const map = selectedDigimon?.down?.flatMap(each => each?.down);\r\n    //     let topPadding = 0;\r\n    //     let bottomPadding = 0;\r\n    //     let length = 0;\r\n    //     for(let i = 0; i < map.down?.length; i++) {\r\n    //         const each = map.down[i];\r\n    //         console.log(\"each\", each);\r\n    //         const row = each?.down?.length * 89 ?? 0;\r\n    //         length += row;\r\n    //         if(i === 0) topPadding = Math.floor(length / 2);\r\n    //         if(i === map.down?.length - 1) bottomPadding = Math.floor(row / 2);\r\n    //     }\r\n    //     // console.log(selectedDigimon?.down?.flatMap(each => each?.down));\r\n    //     verticalHeightLeft.current = {\r\n    //         top: `${topPadding}px`,\r\n    //         height: `${length}px`\r\n    //     };\r\n    //     // setLeft({\r\n    //     //     top: `${topPadding}px`,\r\n    //     //     height: `${length}px`\r\n    //     // })\r\n    // }\r\n    const adjust = () => {\r\n        const canvas = document.getElementById(\"revolution\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.lineWidth = 5;\r\n        ctx.lineRadius = 5;\r\n\r\n        ctx.drawImage(document.querySelector(\"#imageName\"));\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(50, 140);\r\n        // ctx.lineTo(150, 60);\r\n        // ctx.lineTo(250, 140);\r\n        // ctx.closePath();\r\n        // ctx.stroke();\r\n    }\r\n\r\n    return (\r\n        <div id=\"container\">\r\n            <div className=\"header\">header bar & logo</div>\r\n            {/* 진화 상태와 그에 맞는 디지몬 선택자 */}\r\n            <div className='main'>\r\n                <h1 className=\"title-message\">진화 상태에 맞는 디지몬을 선택하세요.</h1>\r\n                <div className=\"filters\">\r\n                    <Combo list={types} selected={selectedType} select={changeType} selectedType={selectedType}></Combo>\r\n                    <Combo list={filtered} selected={selectedDigimon.from} select={(current) => selectDigimon(current)}  selectedType={selectedType}></Combo>\r\n                </div>\r\n                <div className='revolution'>\r\n                    <canvas id=\"revolution\"></canvas>\r\n                    <div className='disable-images' style={{ display: none }}>\r\n                        <img id=\"imageName\" src={`/images/${imageName}.png`} />\r\n                        {/* <img id={`${imageName}`} src={`/images/${imageName}.png`} /> */}\r\n                    </div>\r\n                    {/* { selectedDigimon?.down?.length > 0 && <ProfileGroup key={`${selectedDigimon.from}_down`} digimons={selectedDigimon.down} direction={\"right\"}></ProfileGroup> }\r\n                    { selectedDigimon?.down?.length > 1 && <span className=\"vertical-line right\" style={verticalHeightLeft.current}></span> }\r\n                    { selectedDigimon?.down?.length > 1 && <span className=\"line half\"></span> }\r\n                    { selectedDigimon.from !== \"\" && <Profile digimon={selectedDigimon} ></Profile>}\r\n                    { selectedDigimon?.up?.length > 0 && <ProfileGroup key={`${selectedDigimon.from}_up`} digimons={selectedDigimon.up} direction={\"left\"}></ProfileGroup> } */}\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">푸터</div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}