{"ast":null,"code":"import data from \"../json/data.json\";\nconst getTypeProgression = type => {\n  if (type === \"유년기1\") return 1;\n  if (type === \"유년기2\") return 2;\n  if (type === \"성장기\") return 3;\n  if (type === \"성숙기\") return 4;\n  if (type === \"완전체\") return 5;\n  if (type === \"궁극체\") return 6;\n  return 0;\n};\nconst getTypeNameByProgression = progression => {\n  if (progression === 1) return \"유년기1\";\n  if (progression === 2) return \"유년기2\";\n  if (progression === 3) return \"성장기\";\n  if (progression === 4) return \"성숙기\";\n  if (progression === 5) return \"완전체\";\n  if (progression === 6) return \"궁극체\";\n  return 0;\n};\nconst temp = [];\nconst clearTempArray = () => {\n  for (let i = 0; i < temp.length; i++) {\n    temp.pop();\n  }\n};\nconst getDownEvolutions = (all, standard, selected) => {\n  const evolution = new Array();\n  for (let i = standard; i > 1; i--) {\n    const typeName = getTypeNameByProgression(i - 1);\n    all.filter(each => each.type === typeName && each.to === selected.from).forEach(each => {\n      let sub = null;\n      sub = getDownEvolutions(all, standard - 1, each);\n      if (sub !== undefined && sub !== null) {\n        temp.push(...sub);\n      }\n      each[\"down\"] = sub;\n      evolution.push(each);\n    });\n  }\n  return evolution.length > 0 ? evolution : null;\n};\nconst getUpEvolutions = (all, standard, selected) => {\n  const typeName = getTypeNameByProgression(standard);\n  const evolution = new Array();\n  const froms = all.filter(each => each.type === typeName && each.from === selected.from);\n  froms.forEach(each => {\n    let to = all.find(e => e.from === each.to);\n    if (to !== undefined && to !== null) {\n      to = Object.assign({}, to);\n      to.percentage = each.percentage;\n      evolution.push(to);\n    } else {\n      const nextType = getTypeNameByProgression(getTypeProgression(each.type) + 1);\n      evolution.push({\n        from: each.to,\n        type: nextType,\n        method: each.method,\n        to: \"\",\n        percentage: each.percentage,\n        ingredient: each.ingredient,\n        level: each.length,\n        bonding: 0,\n        str: 0,\n        int: 0,\n        spd: 0,\n        res: 0,\n        def: 0,\n        with: \"\"\n      });\n    }\n  });\n  if (evolution.length > 0) {\n    selected[\"up\"] = evolution;\n    evolution.forEach(each => {\n      getUpEvolutions(all, standard + 1, each);\n    });\n  }\n};\nconst deepCopyAll = () => {\n  const all = new Array();\n  for (const each of data) {\n    all.push(Object.assign({}, each));\n  }\n  return all;\n};\nconst getEvolutions = selected => {\n  const standard = getTypeProgression(selected.type);\n  const all = deepCopyAll(data);\n  selected[\"down\"] = [];\n  selected[\"down\"] = getDownEvolutions(all, standard, selected);\n  clearTempArray();\n  selected[\"up\"] = [];\n  getUpEvolutions(all, standard, selected);\n  clearTempArray();\n};\nexport default getEvolutions;","map":{"version":3,"names":["data","getTypeProgression","type","getTypeNameByProgression","progression","temp","clearTempArray","i","length","pop","getDownEvolutions","all","standard","selected","evolution","Array","typeName","filter","each","to","from","forEach","sub","undefined","push","getUpEvolutions","froms","find","e","Object","assign","percentage","nextType","method","ingredient","level","bonding","str","int","spd","res","def","with","deepCopyAll","getEvolutions"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/functions/getEvolutions.js"],"sourcesContent":["import data from \"../json/data.json\";\r\n\r\nconst getTypeProgression = (type) => {\r\n  if (type === \"유년기1\") return 1;\r\n  if (type === \"유년기2\") return 2;\r\n  if (type === \"성장기\") return 3;\r\n  if (type === \"성숙기\") return 4;\r\n  if (type === \"완전체\") return 5;\r\n  if (type === \"궁극체\") return 6;\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTypeNameByProgression = (progression) => {\r\n  if (progression === 1) return \"유년기1\";\r\n  if (progression === 2) return \"유년기2\";\r\n  if (progression === 3) return \"성장기\";\r\n  if (progression === 4) return \"성숙기\";\r\n  if (progression === 5) return \"완전체\";\r\n  if (progression === 6) return \"궁극체\";\r\n\r\n  return 0;\r\n};\r\n\r\nconst temp = [];\r\nconst clearTempArray = () => {\r\n  for (let i = 0; i < temp.length; i++) {\r\n    temp.pop();\r\n  }\r\n};\r\n\r\nconst getDownEvolutions = (all, standard, selected) => {\r\n  const evolution = new Array();\r\n\r\n  for (let i = standard; i > 1; i--) {\r\n    const typeName = getTypeNameByProgression(i - 1);\r\n\r\n    all\r\n      .filter((each) => each.type === typeName && each.to === selected.from)\r\n      .forEach((each) => {\r\n        let sub = null;\r\n        sub = getDownEvolutions(all, standard - 1, each);\r\n        if (sub !== undefined && sub !== null) {\r\n          temp.push(...sub);\r\n        }\r\n        each[\"down\"] = sub;\r\n        evolution.push(each);\r\n      });\r\n  }\r\n  return evolution.length > 0 ? evolution : null;\r\n};\r\n\r\nconst getUpEvolutions = (all, standard, selected) => {\r\n  const typeName = getTypeNameByProgression(standard);\r\n  \r\n  const evolution = new Array();\r\n  const froms = all.filter((each) => each.type === typeName && each.from === selected.from);\r\n  froms.forEach((each) => {\r\n    let to = all.find((e) => e.from === each.to);\r\n\r\n    if(to !== undefined && to !== null) {\r\n      to = Object.assign({}, to);\r\n      to.percentage = each.percentage;\r\n      evolution.push(to);\r\n    } else {\r\n      const nextType = getTypeNameByProgression(getTypeProgression(each.type) + 1);\r\n\r\n      evolution.push({\r\n        from: each.to,\r\n        type: nextType,\r\n        method: each.method,\r\n        to: \"\",\r\n        percentage: each.percentage,\r\n        ingredient: each.ingredient,\r\n        level: each.length,\r\n        bonding: 0,\r\n        str: 0,\r\n        int: 0,\r\n        spd: 0,\r\n        res: 0,\r\n        def: 0,\r\n        with: \"\"\r\n      });\r\n    }\r\n  });\r\n  \r\n  if(evolution.length > 0) {\r\n    selected[\"up\"] = evolution;\r\n    evolution.forEach(each => {\r\n      getUpEvolutions(all, standard + 1, each);\r\n    });\r\n  }\r\n};\r\n\r\nconst deepCopyAll = () => {\r\n  const all = new Array();\r\n  for (const each of data) {\r\n    all.push(Object.assign({}, each));\r\n  }\r\n\r\n  return all;\r\n};\r\n\r\nconst getEvolutions = (selected) => {\r\n  const standard = getTypeProgression(selected.type);\r\n\r\n  const all = deepCopyAll(data);\r\n\r\n  selected[\"down\"] = [];\r\n  selected[\"down\"] = getDownEvolutions(all, standard, selected);\r\n  clearTempArray();\r\n\r\n  selected[\"up\"] = [];\r\n  getUpEvolutions(all, standard, selected);\r\n  clearTempArray();\r\n};\r\n\r\nexport default getEvolutions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}