{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYeong\\\\Desktop\\\\workspace\\\\dsr_wiki\\\\src\\\\components\\\\profileGroup.js\";\nimport React from \"react\";\nimport ProfileWithLine from \"./profileWithLine\";\nimport Profile from \"./profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileGroup({\n  digimons,\n  direction\n}) {\n  // digimons의 요소가 1개인 경우\n  if (digimons.length === 1) {\n    // digimons.down이 존재하는 경우 -> profileGroup\n    if (digimons.down !== undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-group\",\n      children: /*#__PURE__*/_jsxDEV(ProfileGroup, {\n        digimons: digimons[0].down,\n        direction: direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }, this);else\n      // digimons.down이 존재하지 않는 경우 -> profile\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimons[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this);\n    // digimons의 요소가 복수인 경우\n  } else if (digimons.length > 1) {\n    // digimons.down이 존재하는 경우 -> profileGroup\n    if (digimons.down !== undefined) return /*#__PURE__*/_jsxDEV(ProfileGroup, {\n      digimons: digimons[0].down,\n      direction: direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this);else\n      // digimons.down이 존재하지 않는 경우 -> profile\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-group\",\n        children: digimons.map(digimon => /*#__PURE__*/_jsxDEV(Profile, {\n          digimon: digimon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    return digimons.map(digimon => /*#__PURE__*/_jsxDEV(Profile, {\n      digimon: digimon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-group\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n\n  //-----------------------------\n  // digimons.down이 존재하는 경우 -> profileGroup\n\n  // digimons.down이 존재하지 않는 경우 -> profile\n\n  // let tags;\n\n  // if(digimons.length > 0) return (<div className=\"profile-group\"></div>);\n  // else {\n  //     tags += (<div className=\"profile-group\">\n  //         { digimons.length > 0 && digimons.map(digimon => (\n  //             <ProfileWithLine digimon={digimon} direction={direction} length={digimons.length > 1 ? \"full\" : \"half\"}></ProfileWithLine>\n  //         ))}\n  //     </div>)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-group\",\n    children: [digimons.length === 1 && /*#__PURE__*/_jsxDEV(Profile, {\n      digimon: digimons[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 40\n    }, this), digimons.length > 1 && digimons.map(digimon => /*#__PURE__*/_jsxDEV(Profile, {\n      digimon: digimon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 62\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = ProfileGroup;\nvar _c;\n$RefreshReg$(_c, \"ProfileGroup\");","map":{"version":3,"names":["React","ProfileWithLine","Profile","jsxDEV","_jsxDEV","ProfileGroup","digimons","direction","length","down","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","digimon","map","_c","$RefreshReg$"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/components/profileGroup.js"],"sourcesContent":["import React from \"react\";\r\nimport ProfileWithLine from \"./profileWithLine\";\r\nimport Profile from \"./profile\";\r\n\r\nexport default function ProfileGroup({ digimons, direction }) {\r\n    // digimons의 요소가 1개인 경우\r\n    if(digimons.length === 1) {\r\n        // digimons.down이 존재하는 경우 -> profileGroup\r\n        if(digimons.down !== undefined)\r\n            return (<div className=\"profile-group\">\r\n                        <ProfileGroup digimons={digimons[0].down} direction={direction}></ProfileGroup>\r\n                    </div>);\r\n        else\r\n            // digimons.down이 존재하지 않는 경우 -> profile\r\n            return (<div className=\"profile-group\">\r\n                        <Profile digimon={digimons[0]} ></Profile>\r\n                    </div>);\r\n    // digimons의 요소가 복수인 경우\r\n    } else if(digimons.length > 1) {\r\n        // digimons.down이 존재하는 경우 -> profileGroup\r\n        if(digimons.down !== undefined)\r\n            return <ProfileGroup digimons={digimons[0].down} direction={direction}></ProfileGroup>;\r\n        else\r\n            // digimons.down이 존재하지 않는 경우 -> profile\r\n            return (<div className=\"profile-group\">\r\n                        { digimons.map(digimon => <Profile digimon={digimon}></Profile>) }\r\n                    </div>);\r\n\r\n        return digimons.map(digimon => <Profile digimon={digimon}></Profile>);\r\n    }\r\n\r\n    return (<div className=\"profile-group\"></div>);\r\n\r\n    //-----------------------------\r\n    // digimons.down이 존재하는 경우 -> profileGroup\r\n\r\n    // digimons.down이 존재하지 않는 경우 -> profile\r\n\r\n\r\n    // let tags;\r\n    \r\n    // if(digimons.length > 0) return (<div className=\"profile-group\"></div>);\r\n    // else {\r\n    //     tags += (<div className=\"profile-group\">\r\n    //         { digimons.length > 0 && digimons.map(digimon => (\r\n    //             <ProfileWithLine digimon={digimon} direction={direction} length={digimons.length > 1 ? \"full\" : \"half\"}></ProfileWithLine>\r\n    //         ))}\r\n    //     </div>)\r\n    // }\r\n    return (\r\n        <div className=\"profile-group\">\r\n            { digimons.length === 1 && <Profile digimon={digimons[0]} ></Profile>}\r\n            { digimons.length > 1 && digimons.map(digimon => <Profile digimon={digimon}></Profile> )}\r\n            {/* { digimons.length > 1 && \r\n                digimons.filter(digimon => digimon.down !== undefined && digimon.down?.length > 0)\r\n                        .map(digimon => <ProfileGroup digimons={digimon.down} direction={direction}></ProfileGroup>)} */}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}