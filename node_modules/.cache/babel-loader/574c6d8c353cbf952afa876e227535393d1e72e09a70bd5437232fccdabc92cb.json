{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import Combo from'./components/combo';import data from'./json/data.json';import getEvolutions from'./functions/getEvolutions';import ProfileGroup from'./components/profileGroup';import Profile from'./components/profile';import Revolution from'./components/revolution';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Main(){const[selectedType,setSelectedType]=useState(\"진화 상태\");const[types,setTypes]=useState([\"유년기1\",\"유년기2\",\"성장기\",\"성숙기\",\"완전체\"]);const[all,setAll]=useState(data);const[filtered,setFiltered]=useState([]);const[selectedDigimon,setSelectedDigimon]=useState({from:\"\"});useEffect(()=>{console.log(selectedDigimon);},[selectedDigimon]);const selectDigimon=digimon=>{getEvolutions(digimon);setSelectedDigimon(digimon);};const changeType=type=>{setSelectedType(type);setSelectedDigimon({from:\"디지몬 선택\"});const temp=new Array();let prev=\"\";for(const each of all){if(each.from===prev)continue;if(each.type!==type)continue;prev=each.from;temp.push(each);}setFiltered(temp);};return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title-message\",children:\"\\uC9C4\\uD654 \\uC0C1\\uD0DC\\uC5D0 \\uB9DE\\uB294 \\uB514\\uC9C0\\uBAAC\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsx(Combo,{list:types,selected:selectedType,select:changeType,selectedType:selectedType}),/*#__PURE__*/_jsx(Combo,{list:filtered,selected:selectedDigimon.from,select:current=>selectDigimon(current),selectedType:selectedType})]}),/*#__PURE__*/_jsx(Revolution,{selectedDigimon:selectedDigimon})]});}","map":{"version":3,"names":["React","useEffect","useRef","useState","Combo","data","getEvolutions","ProfileGroup","Profile","Revolution","jsx","_jsx","jsxs","_jsxs","Main","selectedType","setSelectedType","types","setTypes","all","setAll","filtered","setFiltered","selectedDigimon","setSelectedDigimon","from","console","log","selectDigimon","digimon","changeType","type","temp","Array","prev","each","push","className","children","list","selected","select","current"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/Main.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Combo from './components/combo';\r\nimport data from './json/data.json';\r\nimport getEvolutions from './functions/getEvolutions';\r\nimport ProfileGroup from './components/profileGroup';\r\nimport Profile from './components/profile';\r\nimport Revolution from './components/revolution';\r\n\r\nexport default function Main() {\r\n    const [selectedType, setSelectedType] = useState(\"진화 상태\");\r\n    const [types, setTypes] = useState([\"유년기1\", \"유년기2\", \"성장기\", \"성숙기\", \"완전체\"]);\r\n    const [all, setAll] = useState(data);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [selectedDigimon, setSelectedDigimon] = useState({ from: \"\" });\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log(selectedDigimon);\r\n    }, [selectedDigimon]);\r\n\r\n    const selectDigimon = (digimon) => {\r\n        getEvolutions(digimon);\r\n        setSelectedDigimon(digimon);\r\n    }\r\n\r\n    const changeType = (type) => {\r\n        setSelectedType(type);\r\n        setSelectedDigimon({ from: \"디지몬 선택\"});\r\n        const temp = new Array();\r\n        let prev = \"\";\r\n        for(const each of all) {\r\n            if(each.from === prev) continue;\r\n            if(each.type !== type) continue;\r\n\r\n            prev = each.from;\r\n            temp.push(each);\r\n        }\r\n        setFiltered(temp);\r\n    }\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1 className=\"title-message\">진화 상태에 맞는 디지몬을 선택하세요.</h1>\r\n            <div className=\"filters\">\r\n                <Combo list={types} selected={selectedType} select={changeType} selectedType={selectedType}></Combo>\r\n                <Combo list={filtered} selected={selectedDigimon.from} select={(current) => selectDigimon(current)}  selectedType={selectedType}></Combo>\r\n            </div>\r\n            <Revolution selectedDigimon={selectedDigimon}></Revolution>\r\n        </div>\r\n    );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,IAAI,KAAM,kBAAkB,CACnC,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CACrD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjD,cAAe,SAAS,CAAAC,IAAIA,CAAA,CAAG,CAC3B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,OAAO,CAAC,CACzD,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,CAAC,MAAM,CAAE,MAAM,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CAAC,CACzE,KAAM,CAACgB,GAAG,CAAEC,MAAM,CAAC,CAAGjB,QAAQ,CAACE,IAAI,CAAC,CACpC,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACoB,eAAe,CAAEC,kBAAkB,CAAC,CAAGrB,QAAQ,CAAC,CAAEsB,IAAI,CAAE,EAAG,CAAC,CAAC,CAEpExB,SAAS,CAAC,IAAM,CAEZyB,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC,CAChC,CAAC,CAAE,CAACA,eAAe,CAAC,CAAC,CAErB,KAAM,CAAAK,aAAa,CAAIC,OAAO,EAAK,CAC/BvB,aAAa,CAACuB,OAAO,CAAC,CACtBL,kBAAkB,CAACK,OAAO,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,UAAU,CAAIC,IAAI,EAAK,CACzBf,eAAe,CAACe,IAAI,CAAC,CACrBP,kBAAkB,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAC,CAAC,CACrC,KAAM,CAAAO,IAAI,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CACxB,GAAI,CAAAC,IAAI,CAAG,EAAE,CACb,IAAI,KAAM,CAAAC,IAAI,GAAI,CAAAhB,GAAG,CAAE,CACnB,GAAGgB,IAAI,CAACV,IAAI,GAAKS,IAAI,CAAE,SACvB,GAAGC,IAAI,CAACJ,IAAI,GAAKA,IAAI,CAAE,SAEvBG,IAAI,CAAGC,IAAI,CAACV,IAAI,CAChBO,IAAI,CAACI,IAAI,CAACD,IAAI,CAAC,CACnB,CACAb,WAAW,CAACU,IAAI,CAAC,CACrB,CAAC,CAED,mBACInB,KAAA,QAAKwB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjB3B,IAAA,OAAI0B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,uGAAqB,CAAI,CAAC,cACxDzB,KAAA,QAAKwB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACpB3B,IAAA,CAACP,KAAK,EAACmC,IAAI,CAAEtB,KAAM,CAACuB,QAAQ,CAAEzB,YAAa,CAAC0B,MAAM,CAAEX,UAAW,CAACf,YAAY,CAAEA,YAAa,CAAQ,CAAC,cACpGJ,IAAA,CAACP,KAAK,EAACmC,IAAI,CAAElB,QAAS,CAACmB,QAAQ,CAAEjB,eAAe,CAACE,IAAK,CAACgB,MAAM,CAAGC,OAAO,EAAKd,aAAa,CAACc,OAAO,CAAE,CAAE3B,YAAY,CAAEA,YAAa,CAAQ,CAAC,EACxI,CAAC,cACNJ,IAAA,CAACF,UAAU,EAACc,eAAe,CAAEA,eAAgB,CAAa,CAAC,EAC1D,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}