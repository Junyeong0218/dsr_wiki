{"ast":null,"code":"const getTypeProgression = type => {\n  if (type === \"유년기1\") return 1;\n  if (type === \"유년기2\") return 2;\n  if (type === \"성장기\") return 3;\n  if (type === \"성숙기\") return 4;\n  if (type === \"완전체\") return 5;\n  return 0;\n};\nconst getTypeNameByProgression = progression => {\n  if (progression === 1) return \"유년기1\";\n  if (progression === 2) return \"유년기2\";\n  if (progression === 3) return \"성장기\";\n  if (progression === 4) return \"성숙기\";\n  if (progression === 5) return \"완전체\";\n  return 0;\n};\nconst temp = [];\nconst clearTempArray = () => {\n  for (let i = 0; i < temp.length; i++) {\n    temp.pop();\n  }\n};\nconst getDownEvolutions = (all, standard, selected) => {\n  const evolution = new Array();\n  for (let i = standard; i > 1; i--) {\n    const typeName = getTypeNameByProgression(i - 1);\n    all.filter(each => each.type === typeName && each.to === selected.from).forEach(each => {\n      let sub = null;\n      if (temp.findIndex(t => (t === null || t === void 0 ? void 0 : t.from) === each.from) === -1) {\n        sub = getDownEvolutions(all, standard - 1, each);\n        if (sub !== null && sub !== undefined) temp.push(...sub);\n      }\n      each[\"down\"] = sub;\n      evolution.push(each);\n    });\n    return evolution.length > 0 ? evolution : null;\n  }\n};\nconst getUpEvolutions = (all, standard, selected) => {\n  const evolution = new Array();\n  for (let i = standard; i < 6; i++) {\n    const typeName = getTypeNameByProgression(i);\n    console.log(\"typeName\", typeName);\n    all.filter(each => each.type === typeName && each.from === selected.from).forEach(each => {\n      console.log(\"each\", each);\n      let sup = null;\n      if (temp.findIndex(t => (t === null || t === void 0 ? void 0 : t.from) === each.to) === -1) {\n        sup = getUpEvolutions(all, standard + 1, each);\n        if (sup !== null && sub !== undefined) {\n          sup.forEach(s => {\n            s.from = s.to;\n            s.to = \"\";\n          });\n          temp.push(...sup);\n        }\n      }\n      each[\"up\"] = sup;\n      evolution.push(each);\n    });\n    return evolution.length > 0 ? evolution : null;\n  }\n};\nconst getEvolutions = (all, selected) => {\n  const standard = getTypeProgression(selected.type);\n  selected[\"down\"] = [];\n  selected[\"down\"] = getDownEvolutions(all, standard, selected);\n  clearTempArray();\n  selected[\"up\"] = [];\n  selected[\"up\"] = getUpEvolutions(all, standard, selected);\n  clearTempArray();\n};\nexport default getEvolutions;","map":{"version":3,"names":["getTypeProgression","type","getTypeNameByProgression","progression","temp","clearTempArray","i","length","pop","getDownEvolutions","all","standard","selected","evolution","Array","typeName","filter","each","to","from","forEach","sub","findIndex","t","undefined","push","getUpEvolutions","console","log","sup","s","getEvolutions"],"sources":["C:/Users/JunYeong/Desktop/workspace/dsr_wiki/src/functions/getEvolutions.js"],"sourcesContent":["const getTypeProgression = (type) => {\r\n  if (type === \"유년기1\") return 1;\r\n  if (type === \"유년기2\") return 2;\r\n  if (type === \"성장기\") return 3;\r\n  if (type === \"성숙기\") return 4;\r\n  if (type === \"완전체\") return 5;\r\n\r\n  return 0;\r\n};\r\n\r\nconst getTypeNameByProgression = (progression) => {\r\n  if (progression === 1) return \"유년기1\";\r\n  if (progression === 2) return \"유년기2\";\r\n  if (progression === 3) return \"성장기\";\r\n  if (progression === 4) return \"성숙기\";\r\n  if (progression === 5) return \"완전체\";\r\n\r\n  return 0;\r\n};\r\n\r\nconst temp = [];\r\nconst clearTempArray = () => {\r\n  for (let i = 0; i < temp.length; i++) {\r\n    temp.pop();\r\n  }\r\n};\r\n\r\nconst getDownEvolutions = (all, standard, selected) => {\r\n  const evolution = new Array();\r\n\r\n  for (let i = standard; i > 1; i--) {\r\n    const typeName = getTypeNameByProgression(i - 1);\r\n\r\n    all\r\n      .filter((each) => each.type === typeName && each.to === selected.from)\r\n      .forEach((each) => {\r\n        let sub = null;\r\n        if (temp.findIndex((t) => t?.from === each.from) === -1) {\r\n          sub = getDownEvolutions(all, standard - 1, each);\r\n          if (sub !== null && sub !== undefined) temp.push(...sub);\r\n        }\r\n\r\n        each[\"down\"] = sub;\r\n        evolution.push(each);\r\n      });\r\n\r\n    return evolution.length > 0 ? evolution : null;\r\n  }\r\n};\r\n\r\nconst getUpEvolutions = (all, standard, selected) => {\r\n  const evolution = new Array();\r\n\r\n  for (let i = standard; i < 6; i++) {\r\n    const typeName = getTypeNameByProgression(i);\r\n    console.log(\"typeName\", typeName);\r\n\r\n    all.filter((each) => each.type === typeName && each.from === selected.from)\r\n      .forEach((each) => {\r\n        console.log(\"each\", each);\r\n        let sup = null;\r\n        if (temp.findIndex((t) => t?.from === each.to) === -1) {\r\n            sup = getUpEvolutions(all, standard + 1, each);\r\n          if (sup !== null && sub !== undefined) {\r\n            sup.forEach(s => {\r\n                s.from = s.to;\r\n                s.to = \"\";\r\n            });\r\n            temp.push(...sup);\r\n          }\r\n        }\r\n\r\n        each[\"up\"] = sup;\r\n        evolution.push(each);\r\n      });\r\n\r\n    return evolution.length > 0 ? evolution : null;\r\n  }\r\n};\r\n\r\nconst getEvolutions = (all, selected) => {\r\n  const standard = getTypeProgression(selected.type);\r\n\r\n  selected[\"down\"] = [];\r\n  selected[\"down\"] = getDownEvolutions(all, standard, selected);\r\n  clearTempArray();\r\n\r\n  selected[\"up\"] = [];\r\n  selected[\"up\"] = getUpEvolutions(all, standard, selected);\r\n  clearTempArray();\r\n};\r\n\r\nexport default getEvolutions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}